<?php
require('vendor/autoload.php');

use Symfony\Component\DomCrawler\Crawler;

mb_internal_encoding("UTF-8");
define('DEFAULT_URL', "https://varmastroy.ru/");

/**
 * Прогресс бар
 *
 * @param int $done выполнено итераций
 * @param int $total всего итераций
 * @param string $info информационное сообщение
 * @param int $width ширина прогресс бара
 *
 * @return string
 */
function progressBar($done, $total, $info="", $width=50) {
    $perc = round(($done * 100) / $total);
    $bar = round(($width * $perc) / 100);
    return sprintf("%s%% [%s>%s] %s\r", $perc, str_repeat("=", $bar), str_repeat(" ", $width-$bar), $info);
}

/**
 * @param string $url
 * @return mixed
 */
function curlConnect($url = DEFAULT_URL){
    $curl = curl_init($url);
    // ПОДГОТОВКА ЗАГОЛОВКОВ
    $uagent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36";
    // ВСЯКИЕ ПАРАМЕТРЫ
    curl_setopt($curl, CURLOPT_USERAGENT, $uagent);
    curl_setopt($curl, CURLOPT_HEADER, true);
    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, false);
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($curl, CURLOPT_COOKIE, "PMBC=96152e8e9a0168a731539c5e52c6b39a; PHPSESSID=jl0i13pn3157qca807jgp0jqa7; serverId=1");
    $page = curl_exec($curl);
    curl_close($curl);

    return $page;
}

function findContent(Crawler $crawler){
    try {
        $crawler = $crawler->filter('.wrapper > main .page-article')->each(function (Crawler $node){
            $h1 = $node->siblings()->filter('h1')->text();
//            echo $h1.PHP_EOL;
            $p = $node->siblings()->filter('h1')->siblings()->text();
//            echo PHP_EOL.$p;
            $result['title'] = $h1 ." ". $p;
            $result['content'] = str_replace($h1,"", str_replace($p, "", $node->html()));
            return $result;
        });
        return $crawler;
    } catch (\Exception $e) {
        echo "Skip node! ". $e->getMessage();
        return false;
    }
}

/**
 * @param $content
 * @return bool
 */
function putContent($content){
    try{
        $xml = new XMLWriter();
        $xml->openMemory();
        $xml->startDocument('1.0','UTF-8');
        $xml->startElement("rss");
        $xml->writeAttribute("version", "2.0");
        $xml->writeAttribute("xmlns:media", "http://search.yahoo.com/mrss/");
        $xml->writeAttribute("xmlns:turbo", "http://turbo.yandex.ru");
        $xml->writeAttribute("xmlns:yandex", "http://news.yandex.ru");
            $xml->startElement("channel");
            $xml->writeElement("title", "Вармастрой");
            $xml->writeElement("link", DEFAULT_URL);
            $xml->writeElement("description", "turbo");
            $xml->writeElement("language", "ru");
            $xml->writeElement("generator", "Generated by parser Arnon_hs");
                foreach ($content as $i => $item):
                    $xml->startElement("item");
                    $xml->writeAttribute("turbo", "true");
                        $xml->writeElement("title", $item[0]['title']);
                        $xml->writeElement("link", $item[0]['link']);
                        $xml->writeElement("turbo:topic", $item[0]['title']);
                        $xml->writeElement("turbo:source", $item[0]['link']);
                        $xml->startElement("turbo:content");
                            $xml->writeCdata($item[0]['content']);
                        // $xml->writeCdata(str_replace("data-lazy-src", "src",str_replace("/* <![CDATA[ */", "", str_replace("/* ]]> */", "", $item[0]['content']))));
                        $xml->endElement();
                    $xml->endElement();
                    echo progressBar($i, count($content), 'Запись файла', 90);
                    sleep(1);
                endforeach;
            $xml->endElement();
        $xml->endElement();
        $outFile = fopen("output.xml", "w") or die("Unable to open file!");
        fwrite($outFile, $xml->outputMemory());
        fclose($outFile);
    } catch (\Exception $e){
        echo $e->getMessage();
    }
    return true;
}

// START PROGRAM \\


//var_dump($page);
$page = curlConnect();
$crawler = new Crawler($page, null, DEFAULT_URL);
$crawler = $crawler->filter('.top-menu .menu-item-has-children .sub-menu li')->each(function (Crawler $node) {
    $result["text"] = $node->text();
    $result["link"] = $node->filter('a')->link()->getUri();
    return $result;
});
$pattern = [
    "/\s?<div class=\"portfolio.*?\"[^>]*?>.*?<\/div>\s?/si",
    "/\s?<div class=\"review-screen.*?\"[^>]*?>.*?<\/div>\s?/si",
    "/\s?<div class=\"material.*?\"[^>]*?>.*?<\/div>\s?/si",
    "/\s?<div class=\"review-slider.*?\"[^>]*?>.*?<\/div>\s?/si",
    "/\s?<div class=\"review-item.*?\"[^>]*?>.*?<\/div>\s?/si",
/*    "/\s?<div class=\"c-pop.*?\"[^>]*?>.*?<\/div>\s?/si",*/
/*/*    "/\s?<div class=\"big-slider-block.*?\"[^>]*?>.*?<\/div>\s?/si",*/
    "'<div class=\"big-slider-block\"[^>]*?>.*?</div>'si",
/*    "/\s?<h1[^>]*?>.*?<\/h1>\s?/si",*/
    '/\s?data:image.*?["][^"]*"\s?/i',
    '/\s?id=["][^"]*"\s?/i',
////    '/\s?href=["][^"][^#]*"\s?/i',
    '/\s?<script[^>]*?>.*?<\/script>\s?/si',
    '/\s?<form[^>]*?>.*?<\/form>\s?/si',
    '/\s?<noscript[^>]*?>.*?<\/noscript>\s?/si',
    '/\s?<footer[^>]*?>.*?<\/footer>\s?/si'
];
$replacement = [
    "src",
    "src",
    DEFAULT_URL."wp-content"
];
$search = [
    "data-lazy-src",
    "srcset",
    " /wp-content"
];
foreach ($crawler as $key => $node){
    try {
//        echo  $key. ") ".$node['link']." ". $node['text'] . PHP_EOL;
        $html = curlConnect($node['link']);
        $crawler = new Crawler($html, null, DEFAULT_URL);
        $content[] = findContent($crawler);
        $content[$key][0]['link'] = $node['link'];
        //delete
        $content[$key][0]['content'] = str_replace( $search, $replacement, preg_replace($pattern, " ", $content[$key][0]['content']));
/*        preg_replace('/\s?<div[^>]*?>.*?<\/div>\s?/si', ' ', $text);*/
    } catch (\Exception $e) {
        echo $e->getMessage();
    }
}

if(putContent($content))
    echo PHP_EOL . "Success write!" . PHP_EOL ;
else
    echo "Error!" . PHP_EOL;